@import url("https://fonts.googleapis.com/css2?family=Barlow+Semi+Condensed:wght@500;600&display=swap");

:root {
  /* colors */
  --neutral-200: #f2f2f2;
  --neutral-700: hsl(240, 21%, 25%);
  --primary: #1b998b;
  --secondary: #d7263d;

  /* I redefined them to simplify things on theme switcher */
  --bg-color: var(--neutral-200);
  --text-color: var(--neutral-700);

  /* font sizes */
  --fs-400: 1rem;

  /* spaces */
  --space-200: 0.5rem;
  --space-400: 1rem;
  --space-600: 1.5rem;
  --space-800: 2rem;
}

html[data-theme="dark"] {
  --bg-color: var(--neutral-700);
  --text-color: var(--neutral-200);
}

*,
*::after,
*::before {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  display: grid;
  place-items: center;

  min-height: 100vh;
  line-height: 1.6;

  font-family: "Barrow Semi Condensed", monospace;
  background: var(--bg-color);
  color: var(--text-color);
  transition: background-color 0.125s linear, color 0.125s linear;
}

h2 {
  text-transform: uppercase;
  letter-spacing: 0.2rem;
  line-height: 1;
}

button,
input {
  font-family: inherit;
  padding: var(--space-200) var(--space-400);
  border: 0;
  outline: 0;
  background: transparent;
  vertical-align: baseline;
}
input {
  border-bottom: 1px solid var(--primary);
  color: inherit;
}
input::placeholder {
  color: inherit;
  opacity: 0.8;
}
button {
  cursor: pointer;
}
/* remove to dotted outline on buttons firefox */
button::-moz-focus-inner {
  border: 0;
}
/* utils */
.flex {
  display: flex;
}
.flex-column {
  flex-direction: column;
}
.align-center {
  align-self: center;
}
.gap-m {
  gap: var(--space-800);
}
.gap-s {
  gap: var(--space-200);
}
.with-border.color-primary {
  border: 1px solid var(--primary);
  color: var(--primary);
}

.color-secondary {
  color: var(--secondary);
}

/* block */

.wrapper {
  width: min(95vw, fit-content);
}
.todo-text {
  flex: 1;
  padding: 0.2rem 0;
}

.todo[data-completed="true"] > .todo-text {
  opacity: 0.5;
  transition: opacity 0.125ms linear;
}

/* components */

/* theme toggler */
/* when learn more about svg do this as an svg for smother transitions
and better icon design, off course :) And get rid of that ugly border */
.theme-toggler {
  top: var(--space-600);
  right: var(--space-600);
  position: fixed;
  background: var(--text-color);
  border: none;
  outline: none;
  padding: 0;
  inline-size: var(--space-800);
  block-size: var(--space-800);
  aspect-ratio: 1;
  border-radius: 50%;
  cursor: pointer;
  -webkit-tap-highlight-color: transparent;
  /* touch-action: manipulation; */
  /* how to overcome the little border that creates around the moon? */
  overflow: hidden;
  transition: background-color 0.5s linear;
}
.theme-toggler::before {
  --offset-top: calc(100% + 0.2rem);
  --offset-left: 0.7rem;
  content: "";
  position: absolute;
  inline-size: 100%;
  block-size: 100%;
  background: var(--bg-color);
  border-radius: inherit;
  bottom: var(--offset-top);
  left: var(--offset-left);
}
.theme-toggler[aria-label="dark"]::before {
  animation: toggle-in 0.5s forwards;
}
.theme-toggler[aria-label="light"]::before {
  /* I can't see why backwards on the initial animation does'n work */
  animation: toggle-out 0.5s forwards;
}
@keyframes toggle-in {
  0% {
    transform: translateY(0) translateX(0);
  }

  50% {
    transform: translateY(50%) translateX(70%);
  }

  100% {
    transform: translateY(85%) translateX(0);
  }
}

@keyframes toggle-out {
  0% {
    transform: translateY(85%) translateX(0);
  }

  50% {
    transform: translateY(50%) translateX(70%);
  }

  100% {
    transform: translateY(0) translateX(0);
  }
}

/* end theme toggler */

/* custom checkbox */
input[type="checkbox"] {
  appearance: none;
  margin: 0.4rem;
  background: var(--bg-color);
  font-family: 0.75rem;
  color: inherit;
  border: 0.15rem solid currentColor;
  padding: 0.4rem 0.5rem;
  transform: translateY(-0.12em);
  border-radius: 0.15rem;
  cursor: pointer;
}

input[type="checkbox"]::before {
  content: "";
  position: absolute;
  inset: 0.25rem;
  background: var(--primary);
  transform: scale(0);
  transition: transform 0.125s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

input[type="checkbox"]:checked::before {
  transform: scale(1);
}
